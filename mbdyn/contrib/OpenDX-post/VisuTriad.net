//
// time: Mon Oct 28 16:09:24 2002
//
// version: 3.1.2 (format), 4.1.3 (DX)
//
//
// MODULE main
// workspace: width = 1124, height = 875
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 268, y = 65, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home2/marco/PostMbdyn/GeoOut.dx"
    // output[2]: visible = 1, type = 32, value = "GeoOut.dx"
    //
    // 
    // node Import[1]: x = 275, y = 162, inputs = 6, label = Import
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Mark[3]: x = 289, y = 246, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cosines"
    //
main_Mark_3_out_1 = 
    Mark(
    main_Import_1_out_1,
    main_Mark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Compute[1]: x = 154, y = 385, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0, $0.1, $0.2]"
    // expression: value = [a.0, a.1, a.2]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Mark_3_out_1,
    main_Compute_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[1]: x = 419, y = 46, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 1.0 
    //
    // 
    // node Transmitter[1]: x = 481, y = 143, inputs = 1, label = TriadScale
    //
TriadScale = main_Scalar_1_out_1;
    // 
    // node Receiver[1]: x = 263, y = 364, inputs = 1, label = TriadScale
    //
main_Receiver_1_out_1[cache: 0] = TriadScale;
    // 
    // node AutoGlyph[1]: x = 164, y = 472, inputs = 7, label = AutoGlyph
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Compute_1_out_1,
    main_AutoGlyph_1_in_2,
    main_AutoGlyph_1_in_3,
    main_Receiver_1_out_1,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Compute[2]: x = 357, y = 417, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.3, $0.4, $0.5]"
    // expression: value = [a.3, a.4, a.5]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Mark_3_out_1,
    main_Compute_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[2]: x = 428, y = 388, inputs = 1, label = TriadScale
    //
main_Receiver_2_out_1[cache: 0] = TriadScale;
    // 
    // node AutoGlyph[2]: x = 368, y = 495, inputs = 7, label = AutoGlyph
    //
main_AutoGlyph_2_out_1 = 
    AutoGlyph(
    main_Compute_2_out_1,
    main_AutoGlyph_2_in_2,
    main_AutoGlyph_2_in_3,
    main_Receiver_2_out_1,
    main_AutoGlyph_2_in_5,
    main_AutoGlyph_2_in_6,
    main_AutoGlyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Compute[3]: x = 576, y = 424, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.6, $0.7, $0.8]"
    // expression: value = [a.6, a.7, a.8]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Mark_3_out_1,
    main_Compute_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[3]: x = 672, y = 347, inputs = 1, label = TriadScale
    //
main_Receiver_3_out_1[cache: 0] = TriadScale;
    // 
    // node AutoGlyph[3]: x = 593, y = 500, inputs = 7, label = AutoGlyph
    //
main_AutoGlyph_3_out_1 = 
    AutoGlyph(
    main_Compute_3_out_1,
    main_AutoGlyph_3_in_2,
    main_AutoGlyph_3_in_3,
    main_Receiver_3_out_1,
    main_AutoGlyph_3_in_5,
    main_AutoGlyph_3_in_6,
    main_AutoGlyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Mark[5]: x = 789, y = 260, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "labels"
    //
main_Mark_5_out_1 = 
    Mark(
    main_Import_1_out_1,
    main_Mark_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node AutoGlyph[4]: x = 856, y = 483, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "text"
    //
main_AutoGlyph_4_out_1 = 
    AutoGlyph(
    main_Mark_5_out_1,
    main_AutoGlyph_4_in_2,
    main_AutoGlyph_4_in_3,
    main_AutoGlyph_4_in_4,
    main_AutoGlyph_4_in_5,
    main_AutoGlyph_4_in_6,
    main_AutoGlyph_4_in_7
    ) [instance: 4, cache: 1];
    // 
    // node Selector[1]: x = 1016, y = 121, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "x" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "x", "y", "z" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0, 1, 2 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "x" 
    //
    // 
    // node Format[2]: x = 1013, y = 207, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "a.%d"
    //
main_Format_2_out_1 = 
    Format(
    main_Format_2_in_1,
    main_Selector_1_out_1,
    main_Format_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Mark[6]: x = 925, y = 231, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Mark_6_out_1 = 
    Mark(
    main_Import_1_out_1,
    main_Mark_6_in_2
    ) [instance: 6, cache: 1];
    // 
    // node Compute2[1]: x = 968, y = 317, inputs = 5, label = Compute2
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "a"
    //
main_Compute2_1_out_1 = 
    Compute2(
    main_Format_2_out_1,
    main_Compute2_1_in_2,
    main_Mark_6_out_1,
    main_Compute2_1_in_4,
    main_Compute2_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node AutoGlyph[6]: x = 1004, y = 475, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "text"
    //
main_AutoGlyph_6_out_1 = 
    AutoGlyph(
    main_Compute2_1_out_1,
    main_AutoGlyph_6_in_2,
    main_AutoGlyph_6_in_3,
    main_AutoGlyph_6_in_4,
    main_AutoGlyph_6_in_5,
    main_AutoGlyph_6_in_6,
    main_AutoGlyph_6_in_7
    ) [instance: 6, cache: 1];
    // 
    // node Color[1]: x = 166, y = 584, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "red"
    //
main_Color_1_out_1 = 
    Color(
    main_AutoGlyph_1_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Color[2]: x = 345, y = 585, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "green"
    //
main_Color_2_out_1 = 
    Color(
    main_AutoGlyph_2_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Color[3]: x = 557, y = 581, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "blue"
    //
main_Color_3_out_1 = 
    Color(
    main_AutoGlyph_3_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Legend[1]: x = 617, y = 650, inputs = 10, label = Legend
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"z","y","x"}
    // input[2]: defaulting = 0, visible = 1, type = 16777248, value = {"blue","green","red"}
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [1 1]
    // input[4]: defaulting = 0, visible = 1, type = 8, value = [200 25]
    // input[5]: defaulting = 1, visible = 1, type = 3, value = 0
    // input[8]: defaulting = 1, visible = 0, type = 16777248, value = {"ticks"}
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 1.0
    //
main_Legend_1_out_1 = 
    Legend(
    main_Legend_1_in_1,
    main_Legend_1_in_2,
    main_Legend_1_in_3,
    main_Legend_1_in_4,
    main_Legend_1_in_5,
    main_Legend_1_in_6,
    main_Legend_1_in_7,
    main_Legend_1_in_8,
    main_Legend_1_in_9,
    main_Legend_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Selector[2]: x = 759, y = 481, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_2"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "Position Component" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "No Data", "Labels", "Position Component" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0, 1, 2 }
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 1, type = 32, value = "Position Component" 
    //
    // 
    // node Switch[1]: x = 877, y = 609, inputs = 5, label = Switch
    //
main_Switch_1_out_1 = 
    Switch(
    main_Selector_2_out_1,
    main_AutoGlyph_4_out_1,
    main_AutoGlyph_6_out_1,
    main_Switch_1_in_4,
    main_Switch_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 294, y = 744, inputs = 5, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Color_2_out_1,
    main_Color_3_out_1,
    main_Legend_1_out_1,
    main_Switch_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[1]: x = 318, y = 813, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.721283 0.221283 0.222912]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [3.91107 2.58495 1.34608]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 2.2111
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.751
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.421992 0.784997 -0.453545]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0004
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // depth: value = 16
    // window: position = (0.0000,0.2832), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Collect_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48,
    main_Image_1_in_49
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_1_in_1, main_Image_1_out_1, main_Image_1_out_2);
}
main_FileSelector_1_out_1 = "/home2/marco/PostMbdyn/GeoOut.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Mark_3_in_2 = "cosines";
main_Mark_3_out_1 = NULL;
main_Compute_1_in_1 = "[$0.0, $0.1, $0.2]";
main_Compute_1_in_3 = NULL;
main_Compute_1_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 1.0 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 1.0 ;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_AutoGlyph_1_in_2 = NULL;
main_AutoGlyph_1_in_3 = NULL;
main_AutoGlyph_1_in_5 = NULL;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_Compute_2_in_1 = "[$0.3, $0.4, $0.5]";
main_Compute_2_in_3 = NULL;
main_Compute_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_AutoGlyph_2_in_2 = NULL;
main_AutoGlyph_2_in_3 = NULL;
main_AutoGlyph_2_in_5 = NULL;
main_AutoGlyph_2_in_6 = NULL;
main_AutoGlyph_2_in_7 = NULL;
main_AutoGlyph_2_out_1 = NULL;
main_Compute_3_in_1 = "[$0.6, $0.7, $0.8]";
main_Compute_3_in_3 = NULL;
main_Compute_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_AutoGlyph_3_in_2 = NULL;
main_AutoGlyph_3_in_3 = NULL;
main_AutoGlyph_3_in_5 = NULL;
main_AutoGlyph_3_in_6 = NULL;
main_AutoGlyph_3_in_7 = NULL;
main_AutoGlyph_3_out_1 = NULL;
main_Mark_5_in_2 = "labels";
main_Mark_5_out_1 = NULL;
main_AutoGlyph_4_in_2 = "text";
main_AutoGlyph_4_in_3 = NULL;
main_AutoGlyph_4_in_4 = NULL;
main_AutoGlyph_4_in_5 = NULL;
main_AutoGlyph_4_in_6 = NULL;
main_AutoGlyph_4_in_7 = NULL;
main_AutoGlyph_4_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "x" ;
main_Selector_1_in_3 = 0 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 0 ;
main_Format_2_in_1 = "a.%d";
main_Format_2_in_3 = NULL;
main_Format_2_out_1 = NULL;
main_Mark_6_in_2 = "positions";
main_Mark_6_out_1 = NULL;
main_Compute2_1_in_2 = "a";
main_Compute2_1_in_4 = NULL;
main_Compute2_1_in_5 = NULL;
main_Compute2_1_out_1 = NULL;
main_AutoGlyph_6_in_2 = "text";
main_AutoGlyph_6_in_3 = NULL;
main_AutoGlyph_6_in_4 = NULL;
main_AutoGlyph_6_in_5 = NULL;
main_AutoGlyph_6_in_6 = NULL;
main_AutoGlyph_6_in_7 = NULL;
main_AutoGlyph_6_out_1 = NULL;
main_Color_1_in_2 = "red";
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Color_2_in_2 = "green";
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Color_3_in_2 = "blue";
main_Color_3_in_3 = NULL;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Legend_1_in_1 = {"z","y","x"};
main_Legend_1_in_2 = {"blue","green","red"};
main_Legend_1_in_3 = [1 1];
main_Legend_1_in_4 = [200 25];
main_Legend_1_in_5 = NULL;
main_Legend_1_in_6 = NULL;
main_Legend_1_in_7 = NULL;
main_Legend_1_in_8 = NULL;
main_Legend_1_in_9 = 1.0;
main_Legend_1_in_10 = NULL;
main_Legend_1_out_1 = NULL;
main_Selector_2_in_1 = "Selector_2";
main_Selector_2_in_2 = "Position Component" ;
main_Selector_2_in_3 = 2 ;
main_Selector_2_in_4 = NULL;
main_Selector_2_in_5 = NULL;
main_Selector_2_in_6 = NULL;
main_Selector_2_in_7 = NULL;
main_Selector_2_out_1 = 2 ;
main_Switch_1_in_4 = NULL;
main_Switch_1_in_5 = NULL;
main_Switch_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X16,,";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [0.721283 0.221283 0.222912];
main_Image_1_in_6 = [3.91107 2.58495 1.34608];
main_Image_1_in_7 = 2.2111;
main_Image_1_in_8 = 640;
main_Image_1_in_9 = 0.751;
main_Image_1_in_10 = [-0.421992 0.784997 -0.453545];
main_Image_1_in_11 = NULL;
main_Image_1_in_12 = 0;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = NULL;
main_Image_1_in_18 = NULL;
main_Image_1_in_19 = 0;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = NULL;
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = NULL;
main_Image_1_in_26 = NULL;
main_Image_1_in_27 = NULL;
main_Image_1_in_28 = NULL;
main_Image_1_in_29 = 1;
main_Image_1_in_30 = NULL;
main_Image_1_in_31 = NULL;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = 1;
main_Image_1_in_34 = NULL;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = 1;
main_Image_1_in_37 = NULL;
main_Image_1_in_38 = NULL;
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "rotate";
main_Image_1_in_42 = NULL;
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_in_49 = NULL;
Executive("product version 4 1 3");
$sync
main();
