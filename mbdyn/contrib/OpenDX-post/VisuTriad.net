//
// time: Mon Jan 20 09:28:54 2003
//
// version: 3.1.2 (format), 4.1.3 (DX)
//
//
//
// macro reference (direct): DecimateFormatList /home2/marco/mbdyn/contrib/OpenDX-post/DecimateFormatList.net
include "DecimateFormatList.net"
//
// macro reference (direct): M3TimesP3 /home2/marco/mbdyn/contrib/OpenDX-post/M3TimesP3.net
include "M3TimesP3.net"
//
// MODULE main
//
// comment: macro reference (direct): FormatList /opt/dx/samples/macros/FormatListMacro.net
// comment: macro reference (direct): M3TimesP3 @PREFIX@/contrib/OpenDX-post/M3TimesP3.net
// comment: macro reference (direct): M3TimesP3 /data1/home/marc2/OpenDX-post/M3TimesP3.net
// comment: Copyright (C) 2002
// comment: 
// comment: Marco Morandini <morandini@aero.polimi.it>
// comment: 
// comment: This program is freely usable as a post-processor
// comment: for the GPL'ed multi-body code MBDyn (available
// comment: at http://www.mbdyn.org).
// comment: The program can be distributed with the source code
// comment: of MBDyn.  Any other use of the program, including
// comment: its modification, is explicitly forbidden
// comment: 
// comment: This program is distributed in the hope 
// comment: that it will be useful,
// comment: but WITHOUT ANY WARRANTY; 
// comment: without even the implied warranty of
// comment: MERCHANTABILITY or FITNESS FOR 
// comment: A PARTICULAR PURPOSE.
// page assignment: MainControl	order=2, windowed=0, showing=1
// page assignment: PlotAll	order=6, windowed=0, showing=0
// page assignment: ScaleDispl	order=3, windowed=0, showing=0
// page assignment: ShowBeams2	order=5, windowed=0, showing=0
// page assignment: ShowTriads	order=4, windowed=0, showing=0
// workspace: width = 850, height = 903
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 187, y = 16, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home3/marco/Adyn/ph_13c.dx"
    // output[2]: visible = 1, type = 32, value = "ph_13c.dx"
    // page group: MainControl
    //
    // 
    // node Import[1]: x = 197, y = 114, inputs = 6, label = Import
    // page group: MainControl
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Selector[16]: x = 350, y = 469, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_16"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "Show step" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "Show step" "Show sequence" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 }
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "Show step" 
    // page group: MainControl
    //
    // 
    // node Inquire[5]: x = 221, y = 223, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "series positions"
    // page group: MainControl
    //
main_Inquire_5_out_1 = 
    Inquire(
    main_Import_1_out_1,
    main_Inquire_5_in_2,
    main_Inquire_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Integer[1]: x = 316, y = 22, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 21 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 21 
    // page group: MainControl
    //
    // 
    // node Inquire[9]: x = 383, y = 135, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "items"
    // page group: MainControl
    //
main_Inquire_9_out_1 = 
    Inquire(
    main_Inquire_5_out_1,
    main_Inquire_9_in_2,
    main_Inquire_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node Compute[16]: x = 343, y = 216, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "max(1,$1/$0)"
    // page group: MainControl
    // expression: value = max(1,b/a)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_16_out_1 = 
    Compute(
    main_Compute_16_in_1,
    main_Integer_1_out_1,
    main_Inquire_9_out_1
    ) [instance: 16, cache: 1];
    // 
    // node DecimateFormatList[1]: x = 230, y = 314, inputs = 3, label = DecimateFormatList
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "%f"
    // input[3]: defaulting = 1, visible = 1, type = 1, value = 10
    // page group: MainControl
    //
main_DecimateFormatList_1_out_1 = 
    DecimateFormatList(
    main_Inquire_5_out_1,
    main_DecimateFormatList_1_in_2,
    main_Compute_16_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Selector[12]: x = 330, y = 383, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_12"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "0.000000" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "0.000000" "0.045000" "0.090000" "0.135000" "0.180000" "0.225000" "0.270000" "0.315000" "0.360000" "0.405000" "0.450000" "0.495000" "0.540000" "0.585000" "0.630000" "0.675000" "0.720000" "0.765000" "0.810000" "0.855000" "0.900000" "0.945000" "0.990000" "1.000000" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "0.000000" 
    // page group: MainControl
    //
main_Selector_12_out_1[cache: 2],
main_Selector_12_out_2[cache: 2] = 
    Selector(
    main_Selector_12_in_1,
    main_Selector_12_in_2,
    main_Selector_12_in_3,
    main_DecimateFormatList_1_out_1,
    main_Selector_12_in_5,
    main_Selector_12_in_6,
    main_Selector_12_in_7
    ) [instance: 12, cache: 1];
    // 
    // node Compute[5]: x = 616, y = 173, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "0"
    // page group: MainControl
    // expression: value = 0
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Compute_5_in_2,
    main_Compute_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Inquire[7]: x = 763, y = 163, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "count"
    // page group: MainControl
    //
main_Inquire_7_out_1[cache: 0] = 
    Inquire(
    main_Inquire_5_out_1,
    main_Inquire_7_in_2,
    main_Inquire_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Compute[4]: x = 781, y = 240, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: MainControl
    // expression: value = a-1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Inquire_7_out_1,
    main_Compute_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Sequencer[1]: x = 617, y = 314, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 200
    // input[6]: defaulting = 1, visible = 1, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 200 1 0 200 1 }
    // page group: MainControl
    // vcr[1]: min = 0, max = 200, beg = 0, end = 200, cur = 1, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.0000,0.0000), size = 0.2734x0.1045
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Compute_5_out_1,
    main_Compute_4_out_1,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Switch[2]: x = 475, y = 558, inputs = 3, label = Switch
    // page group: MainControl
    //
main_Switch_2_out_1 = 
    Switch(
    main_Selector_16_out_1,
    main_Selector_12_out_1,
    main_Sequencer_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Select[10]: x = 193, y = 765, inputs = 3, label = Select
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2
    // page group: MainControl
    //
main_Select_10_out_1[cache: 0] = 
    Select(
    main_Import_1_out_1,
    main_Switch_2_out_1,
    main_Select_10_in_3
    ) [instance: 10, cache: 1];
    // 
    // node Transmitter[32]: x = 152, y = 841, inputs = 1, label = DeformedTimeData
    // page group: MainControl
    //
DeformedTimeData = main_Select_10_out_1;
    // 
    // node Receiver[8]: x = 52, y = 62, inputs = 1, label = DeformedTimeData
    // page group: ScaleDispl
    //
main_Receiver_8_out_1[cache: 0] = DeformedTimeData;
    // 
    // node Mark[14]: x = 73, y = 194, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ScaleDispl
    //
main_Mark_14_out_1 = 
    Mark(
    main_Receiver_8_out_1,
    main_Mark_14_in_2
    ) [instance: 14, cache: 1];
    // 
    // node Select[13]: x = 79, y = 249, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = NULL
    // page group: MainControl
    //
main_Select_13_out_1[cache: 0] = 
    Select(
    main_Import_1_out_1,
    main_Select_13_in_2,
    main_Select_13_in_3
    ) [instance: 13, cache: 1];
    // 
    // node Transmitter[31]: x = 45, y = 326, inputs = 1, label = UndeformedData
    // page group: MainControl
    //
UndeformedData = main_Select_13_out_1;
    // 
    // node Receiver[9]: x = 216, y = 60, inputs = 1, label = UndeformedData
    // page group: ScaleDispl
    //
main_Receiver_9_out_1[cache: 0] = UndeformedData;
    // 
    // node Mark[13]: x = 261, y = 192, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ScaleDispl
    //
main_Mark_13_out_1 = 
    Mark(
    main_Receiver_9_out_1,
    main_Mark_13_in_2
    ) [instance: 13, cache: 1];
    // 
    // node Scalar[2]: x = 384, y = 101, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: ScaleDispl
    //
    // 
    // node Compute[17]: x = 251, y = 336, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$1+(($0-$1)*$2)"
    // page group: ScaleDispl
    // expression: value = b+((a-b)*c)
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_17_out_1[cache: 0] = 
    Compute(
    main_Compute_17_in_1,
    main_Mark_14_out_1,
    main_Mark_13_out_1,
    main_Scalar_2_out_1
    ) [instance: 17, cache: 1];
    // 
    // node Unmark[2]: x = 268, y = 447, inputs = 2, label = Unmark
    // page group: ScaleDispl
    //
main_Unmark_2_out_1[cache: 0] = 
    Unmark(
    main_Compute_17_out_1,
    main_Unmark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[27]: x = 273, y = 557, inputs = 1, label = TimeData
    // page group: ScaleDispl
    //
TimeData = main_Unmark_2_out_1;
    // 
    // node Receiver[4]: x = 256, y = 56, inputs = 1, label = TimeData
    // page group: ShowTriads
    //
main_Receiver_4_out_1[cache: 0] = TimeData;
    // 
    // node Select[11]: x = 277, y = 162, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "OrientedTriads"
    // page group: ShowTriads
    //
main_Select_11_out_1[cache: 0] = 
    Select(
    main_Receiver_4_out_1,
    main_Select_11_in_2,
    main_Select_11_in_3
    ) [instance: 11, cache: 1];
    // 
    // node Mark[5]: x = 789, y = 260, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "labels"
    // page group: ShowTriads
    //
main_Mark_5_out_1[cache: 0] = 
    Mark(
    main_Select_11_out_1,
    main_Mark_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node AutoGlyph[4]: x = 856, y = 483, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "text"
    // page group: ShowTriads
    //
main_AutoGlyph_4_out_1 = 
    AutoGlyph(
    main_Mark_5_out_1,
    main_AutoGlyph_4_in_2,
    main_AutoGlyph_4_in_3,
    main_AutoGlyph_4_in_4,
    main_AutoGlyph_4_in_5,
    main_AutoGlyph_4_in_6,
    main_AutoGlyph_4_in_7
    ) [instance: 4, cache: 1];
    // 
    // node Selector[1]: x = 1016, y = 121, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "x" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "x" "y" "z" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "x" 
    // page group: ShowTriads
    //
    // 
    // node Format[2]: x = 1013, y = 207, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "a.%d"
    // page group: ShowTriads
    //
main_Format_2_out_1 = 
    Format(
    main_Format_2_in_1,
    main_Selector_1_out_1,
    main_Format_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Mark[6]: x = 925, y = 231, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ShowTriads
    //
main_Mark_6_out_1 = 
    Mark(
    main_Select_11_out_1,
    main_Mark_6_in_2
    ) [instance: 6, cache: 1];
    // 
    // node Compute2[1]: x = 968, y = 317, inputs = 5, label = Compute2
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "a"
    // page group: ShowTriads
    //
main_Compute2_1_out_1[cache: 0] = 
    Compute2(
    main_Format_2_out_1,
    main_Compute2_1_in_2,
    main_Mark_6_out_1,
    main_Compute2_1_in_4,
    main_Compute2_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node AutoGlyph[6]: x = 1004, y = 475, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "text"
    // page group: ShowTriads
    //
main_AutoGlyph_6_out_1 = 
    AutoGlyph(
    main_Compute2_1_out_1,
    main_AutoGlyph_6_in_2,
    main_AutoGlyph_6_in_3,
    main_AutoGlyph_6_in_4,
    main_AutoGlyph_6_in_5,
    main_AutoGlyph_6_in_6,
    main_AutoGlyph_6_in_7
    ) [instance: 6, cache: 1];
    // 
    // node Receiver[6]: x = 208, y = 63, inputs = 1, label = TimeData
    // page group: ShowBeams2
    //
main_Receiver_6_out_1[cache: 0] = TimeData;
    // 
    // node Select[12]: x = 229, y = 169, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "Beams2"
    // page group: ShowBeams2
    //
main_Select_12_out_1[cache: 0] = 
    Select(
    main_Receiver_6_out_1,
    main_Select_12_in_2,
    main_Select_12_in_3
    ) [instance: 12, cache: 1];
    // 
    // node Isolate[1]: x = 240, y = 279, inputs = 2, label = Isolate
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 1.
    // page group: ShowBeams2
    //
main_Isolate_1_out_1[cache: 0] = 
    Isolate(
    main_Select_12_out_1,
    main_Isolate_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Mark[7]: x = 324, y = 409, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ShowBeams2
    //
main_Mark_7_out_1 = 
    Mark(
    main_Isolate_1_out_1,
    main_Mark_7_in_2
    ) [instance: 7, cache: 1];
    // 
    // node Mark[9]: x = 486, y = 417, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cosines"
    // page group: ShowBeams2
    //
main_Mark_9_out_1 = 
    Mark(
    main_Isolate_1_out_1,
    main_Mark_9_in_2
    ) [instance: 9, cache: 1];
    // 
    // node Mark[8]: x = 648, y = 416, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "connections"
    // page group: ShowBeams2
    //
main_Mark_8_out_1[cache: 0] = 
    Mark(
    main_Isolate_1_out_1,
    main_Mark_8_in_2
    ) [instance: 8, cache: 1];
    // 
    // node Compute[10]: x = 574, y = 491, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.1"
    // page group: ShowBeams2
    // expression: value = a.1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_10_out_1[cache: 0] = 
    Compute(
    main_Compute_10_in_1,
    main_Mark_8_out_1,
    main_Compute_10_in_3
    ) [instance: 10, cache: 1];
    // 
    // node Extract[2]: x = 523, y = 560, inputs = 2, label = Extract
    // page group: ShowBeams2
    //
main_Extract_2_out_1[cache: 0] = 
    Extract(
    main_Compute_10_out_1,
    main_Extract_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Options[2]: x = 513, y = 629, inputs = 5, label = Options
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "dep"
    // input[3]: defaulting = 0, visible = 1, type = 29, value = NULL
    // page group: ShowBeams2
    //
main_Options_2_out_1 = 
    Options(
    main_Extract_2_out_1,
    main_Options_2_in_2,
    main_Options_2_in_3,
    main_Options_2_in_4,
    main_Options_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Mark[11]: x = 755, y = 417, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "offsets"
    // page group: ShowBeams2
    //
main_Mark_11_out_1[cache: 0] = 
    Mark(
    main_Isolate_1_out_1,
    main_Mark_11_in_2
    ) [instance: 11, cache: 1];
    // 
    // node Compute[7]: x = 743, y = 561, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0, $0.1, $0.2]"
    // page group: ShowBeams2
    // expression: value = [a.0, a.1, a.2]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_7_out_1[cache: 0] = 
    Compute(
    main_Compute_7_in_1,
    main_Mark_11_out_1,
    main_Compute_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Post[1]: x = 765, y = 626, inputs = 2, label = Post
    // page group: ShowBeams2
    //
main_Post_1_out_1 = 
    Post(
    main_Compute_7_out_1,
    main_Post_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Replace[1]: x = 561, y = 694, inputs = 4, label = Replace
    // input[4]: defaulting = 0, visible = 1, type = 32, value = "invalid positions"
    // page group: ShowBeams2
    //
main_Replace_1_out_1 = 
    Replace(
    main_Options_2_out_1,
    main_Post_1_out_1,
    main_Replace_1_in_3,
    main_Replace_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node M3TimesP3[2]: x = 426, y = 769, inputs = 2, label = M3TimesP3
    // page group: ShowBeams2
    //
main_M3TimesP3_2_out_1[cache: 0] = 
    M3TimesP3(
    main_Mark_9_out_1,
    main_Replace_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Compute[11]: x = 423, y = 841, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "invalid($0)?[0.,0.,0.]:$0"
    // page group: ShowBeams2
    // expression: value = invalid(a)?[0.,0.,0.]:a
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_11_out_1[cache: 0] = 
    Compute(
    main_Compute_11_in_1,
    main_M3TimesP3_2_out_1,
    main_Compute_11_in_3
    ) [instance: 11, cache: 1];
    // 
    // node Remove[2]: x = 396, y = 1079, inputs = 2, label = Remove
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "invalid positions"
    // page group: ShowBeams2
    //
main_Remove_2_out_1 = 
    Remove(
    main_Compute_11_out_1,
    main_Remove_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Compute[9]: x = 671, y = 491, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0.0"
    // page group: ShowBeams2
    // expression: value = a.0
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_9_out_1[cache: 0] = 
    Compute(
    main_Compute_9_in_1,
    main_Mark_8_out_1,
    main_Compute_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node Extract[1]: x = 723, y = 708, inputs = 2, label = Extract
    // page group: ShowBeams2
    //
main_Extract_1_out_1[cache: 0] = 
    Extract(
    main_Compute_9_out_1,
    main_Extract_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Options[1]: x = 738, y = 778, inputs = 5, label = Options
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "dep"
    // input[3]: defaulting = 0, visible = 1, type = 29, value = NULL
    // page group: ShowBeams2
    //
main_Options_1_out_1 = 
    Options(
    main_Extract_1_out_1,
    main_Options_1_in_2,
    main_Options_1_in_3,
    main_Options_1_in_4,
    main_Options_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Compute[8]: x = 831, y = 562, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.3, $0.4, $0.5]"
    // page group: ShowBeams2
    // expression: value = [a.3, a.4, a.5]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_8_out_1[cache: 0] = 
    Compute(
    main_Compute_8_in_1,
    main_Mark_11_out_1,
    main_Compute_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node Post[2]: x = 853, y = 628, inputs = 2, label = Post
    // page group: ShowBeams2
    //
main_Post_2_out_1 = 
    Post(
    main_Compute_8_out_1,
    main_Post_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Replace[2]: x = 785, y = 847, inputs = 4, label = Replace
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "data"
    // input[4]: defaulting = 0, visible = 1, type = 32, value = "invalid positions"
    // page group: ShowBeams2
    //
main_Replace_2_out_1 = 
    Replace(
    main_Options_1_out_1,
    main_Post_2_out_1,
    main_Replace_2_in_3,
    main_Replace_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node M3TimesP3[1]: x = 787, y = 974, inputs = 2, label = M3TimesP3
    // page group: ShowBeams2
    //
main_M3TimesP3_1_out_1[cache: 0] = 
    M3TimesP3(
    main_Mark_9_out_1,
    main_Replace_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Compute[12]: x = 812, y = 1047, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "invalid($0)?[0.,0.,0.]:$0"
    // page group: ShowBeams2
    // expression: value = invalid(a)?[0.,0.,0.]:a
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_12_out_1[cache: 0] = 
    Compute(
    main_Compute_12_in_1,
    main_M3TimesP3_1_out_1,
    main_Compute_12_in_3
    ) [instance: 12, cache: 1];
    // 
    // node Remove[1]: x = 692, y = 1118, inputs = 2, label = Remove
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "invalid positions"
    // page group: ShowBeams2
    //
main_Remove_1_out_1 = 
    Remove(
    main_Compute_12_out_1,
    main_Remove_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[14]: x = 654, y = 1190, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+$1"
    // page group: ShowBeams2
    // expression: value = a+b
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_14_out_1 = 
    Compute(
    main_Compute_14_in_1,
    main_Remove_2_out_1,
    main_Remove_1_out_1
    ) [instance: 14, cache: 1];
    // 
    // node Compute[13]: x = 536, y = 1260, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+$1"
    // page group: ShowBeams2
    // expression: value = a+b
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_13_out_1[cache: 0] = 
    Compute(
    main_Compute_13_in_1,
    main_Mark_7_out_1,
    main_Compute_14_out_1
    ) [instance: 13, cache: 1];
    // 
    // node Unmark[1]: x = 554, y = 1332, inputs = 2, label = Unmark
    // page group: ShowBeams2
    //
main_Unmark_1_out_1[cache: 0] = 
    Unmark(
    main_Compute_13_out_1,
    main_Unmark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Mark[12]: x = 460, y = 1293, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "labels"
    // page group: ShowBeams2
    //
main_Mark_12_out_1[cache: 0] = 
    Mark(
    main_Unmark_1_out_1,
    main_Mark_12_in_2
    ) [instance: 12, cache: 1];
    // 
    // node AutoGlyph[10]: x = 316, y = 1289, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "text"
    // page group: ShowBeams2
    //
main_AutoGlyph_10_out_1 = 
    AutoGlyph(
    main_Mark_12_out_1,
    main_AutoGlyph_10_in_2,
    main_AutoGlyph_10_in_3,
    main_AutoGlyph_10_in_4,
    main_AutoGlyph_10_in_5,
    main_AutoGlyph_10_in_6,
    main_AutoGlyph_10_in_7
    ) [instance: 10, cache: 1];
    // 
    // node Mark[3]: x = 289, y = 246, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cosines"
    // page group: ShowTriads
    //
main_Mark_3_out_1[cache: 0] = 
    Mark(
    main_Select_11_out_1,
    main_Mark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Compute[1]: x = 153, y = 385, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0, $0.1, $0.2]"
    // page group: ShowTriads
    // expression: value = [a.0, a.1, a.2]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Mark_3_out_1,
    main_Compute_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[1]: x = 419, y = 46, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.55 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.01
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 10.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.55 
    // page group: ShowTriads
    //
    // 
    // node Transmitter[1]: x = 481, y = 143, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
TriadScale = main_Scalar_1_out_1;
    // 
    // node Receiver[1]: x = 263, y = 364, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
main_Receiver_1_out_1[cache: 0] = TriadScale;
    // 
    // node Glyph[1]: x = 176, y = 490, inputs = 7, label = Glyph
    // page group: ShowTriads
    //
main_Glyph_1_out_1[cache: 0] = 
    Glyph(
    main_Compute_1_out_1,
    main_Glyph_1_in_2,
    main_Glyph_1_in_3,
    main_Receiver_1_out_1,
    main_Glyph_1_in_5,
    main_Glyph_1_in_6,
    main_Glyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 166, y = 584, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "red"
    // page group: ShowTriads
    //
main_Color_1_out_1 = 
    Color(
    main_Glyph_1_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Compute[2]: x = 357, y = 417, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.3, $0.4, $0.5]"
    // page group: ShowTriads
    // expression: value = [a.3, a.4, a.5]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Mark_3_out_1,
    main_Compute_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[2]: x = 428, y = 388, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
main_Receiver_2_out_1[cache: 0] = TriadScale;
    // 
    // node Glyph[2]: x = 344, y = 494, inputs = 7, label = Glyph
    // page group: ShowTriads
    //
main_Glyph_2_out_1[cache: 0] = 
    Glyph(
    main_Compute_2_out_1,
    main_Glyph_2_in_2,
    main_Glyph_2_in_3,
    main_Receiver_2_out_1,
    main_Glyph_2_in_5,
    main_Glyph_2_in_6,
    main_Glyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Color[2]: x = 345, y = 585, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "green"
    // page group: ShowTriads
    //
main_Color_2_out_1 = 
    Color(
    main_Glyph_2_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Compute[3]: x = 576, y = 424, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.6, $0.7, $0.8]"
    // page group: ShowTriads
    // expression: value = [a.6, a.7, a.8]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Mark_3_out_1,
    main_Compute_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[3]: x = 669, y = 333, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
main_Receiver_3_out_1[cache: 0] = TriadScale;
    // 
    // node Glyph[3]: x = 557, y = 498, inputs = 7, label = Glyph
    // page group: ShowTriads
    //
main_Glyph_3_out_1[cache: 0] = 
    Glyph(
    main_Compute_3_out_1,
    main_Glyph_3_in_2,
    main_Glyph_3_in_3,
    main_Receiver_3_out_1,
    main_Glyph_3_in_5,
    main_Glyph_3_in_6,
    main_Glyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Color[3]: x = 557, y = 581, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "blue"
    // page group: ShowTriads
    //
main_Color_3_out_1 = 
    Color(
    main_Glyph_3_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Legend[1]: x = 647, y = 634, inputs = 10, label = Legend
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"z","y","x"}
    // input[2]: defaulting = 0, visible = 1, type = 16777248, value = {"blue","green","red"}
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [1 1]
    // input[4]: defaulting = 0, visible = 1, type = 8, value = [200 25]
    // input[5]: defaulting = 1, visible = 1, type = 3, value = 0
    // input[8]: defaulting = 1, visible = 0, type = 16777248, value = {"ticks"}
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // page group: ShowTriads
    //
main_Legend_1_out_1 = 
    Legend(
    main_Legend_1_in_1,
    main_Legend_1_in_2,
    main_Legend_1_in_3,
    main_Legend_1_in_4,
    main_Legend_1_in_5,
    main_Legend_1_in_6,
    main_Legend_1_in_7,
    main_Legend_1_in_8,
    main_Legend_1_in_9,
    main_Legend_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Selector[2]: x = 759, y = 481, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_2"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "No Data" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "No Data" "Labels" "Position Component" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "No Data" 
    // page group: ShowTriads
    //
    // 
    // node Switch[1]: x = 880, y = 665, inputs = 5, label = Switch
    // page group: ShowTriads
    //
main_Switch_1_out_1 = 
    Switch(
    main_Selector_2_out_1,
    main_AutoGlyph_4_out_1,
    main_AutoGlyph_6_out_1,
    main_Switch_1_in_4,
    main_Switch_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 294, y = 744, inputs = 5, label = Collect
    // page group: ShowTriads
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Color_2_out_1,
    main_Color_3_out_1,
    main_Legend_1_out_1,
    main_Switch_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[2]: x = 126, y = 706, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_2"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: ShowTriads
    // toggle : 1
    //
    // 
    // node Switch[4]: x = 177, y = 787, inputs = 3, label = Switch
    // page group: ShowTriads
    //
main_Switch_4_out_1 = 
    Switch(
    main_Toggle_2_out_1,
    main_Collect_1_out_1,
    main_Switch_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[29]: x = 311, y = 821, inputs = 1, label = TriadsImage
    // page group: ShowTriads
    //
TriadsImage = main_Switch_4_out_1;
    // 
    // node Receiver[5]: x = 140, y = 59, inputs = 1, label = TriadsImage
    // page group: PlotAll
    //
main_Receiver_5_out_1[cache: 0] = TriadsImage;
    // 
    // node Toggle[1]: x = 12, y = 269, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: ShowBeams2
    // toggle : 1
    //
    // 
    // node Inquire[8]: x = 85, y = 267, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "has member"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "Beams2"
    // page group: ShowBeams2
    //
main_Inquire_8_out_1 = 
    Inquire(
    main_Receiver_6_out_1,
    main_Inquire_8_in_2,
    main_Inquire_8_in_3
    ) [instance: 8, cache: 1];
    // 
    // node Compute[15]: x = 70, y = 376, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0 && $1"
    // page group: ShowBeams2
    // expression: value = a && b
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_15_out_1 = 
    Compute(
    main_Compute_15_in_1,
    main_Toggle_1_out_1,
    main_Inquire_8_out_1
    ) [instance: 15, cache: 1];
    // 
    // node Toggle[3]: x = 249, y = 1287, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_3"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: ShowBeams2
    // toggle : 0
    //
    // 
    // node Switch[5]: x = 380, y = 1382, inputs = 3, label = Switch
    // page group: ShowBeams2
    //
main_Switch_5_out_1 = 
    Switch(
    main_Toggle_3_out_1,
    main_AutoGlyph_10_out_1,
    main_Switch_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node ShowConnections[1]: x = 518, y = 1420, inputs = 1, label = ShowConnections
    // page group: ShowBeams2
    //
main_ShowConnections_1_out_1[cache: 0] = 
    ShowConnections(
    main_Unmark_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Tube[1]: x = 572, y = 1494, inputs = 4, label = Tube
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 0.2
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 4
    // input[4]: defaulting = 1, visible = 0, type = 32, value = NULL
    // page group: ShowBeams2
    //
main_Tube_1_out_1 = 
    Tube(
    main_ShowConnections_1_out_1,
    main_Tube_1_in_2,
    main_Tube_1_in_3,
    main_Tube_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Collect[4]: x = 403, y = 1454, inputs = 2, label = Collect
    // page group: ShowBeams2
    //
main_Collect_4_out_1 = 
    Collect(
    main_Switch_5_out_1,
    main_Tube_1_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Switch[3]: x = 218, y = 1510, inputs = 3, label = Switch
    // page group: ShowBeams2
    //
main_Switch_3_out_1 = 
    Switch(
    main_Compute_15_out_1,
    main_Collect_4_out_1,
    main_Switch_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[30]: x = 541, y = 1581, inputs = 1, label = Beam2Image
    // page group: ShowBeams2
    //
Beam2Image = main_Switch_3_out_1;
    // 
    // node Receiver[7]: x = 267, y = 60, inputs = 1, label = Beam2Image
    // page group: PlotAll
    //
main_Receiver_7_out_1[cache: 0] = Beam2Image;
    // 
    // node Collect[2]: x = 170, y = 193, inputs = 2, label = Collect
    // page group: PlotAll
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_5_out_1,
    main_Receiver_7_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Compute[6]: x = 337, y = 575, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0-1"
    // page group: MainControl
    // expression: value = a-1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_6_out_1 = 
    Compute(
    main_Compute_6_in_1,
    main_Selector_16_out_1,
    main_Compute_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Toggle[5]: x = 547, y = 325, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_5"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: PlotAll
    // toggle : 0
    //
    // 
    // node Toggle[6]: x = 410, y = 39, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_6"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: PlotAll
    // toggle : 0
    //
    // 
    // node FileSelector[3]: x = 611, y = 25, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home/marco/view.dx"
    // output[2]: visible = 1, type = 32, value = "view.dx"
    // page group: PlotAll
    //
    // 
    // node Route[3]: x = 563, y = 132, inputs = 2, outputs = 2, label = Route
    // page group: PlotAll
    //
main_Route_3_out_1[cache: 0],
main_Route_3_out_2[cache: 0] = 
    Route(
    main_Toggle_6_out_1,
    main_FileSelector_3_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Import[2]: x = 402, y = 203, inputs = 6, label = Import
    // page group: PlotAll
    //
main_Import_2_out_1 = 
    Import(
    main_Route_3_out_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Switch[6]: x = 306, y = 282, inputs = 3, label = Switch
    // page group: PlotAll
    //
main_Switch_6_out_1 = 
    Switch(
    main_Toggle_6_out_1,
    main_Import_2_out_1,
    main_Switch_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Image[2]: x = 161, y = 352, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [7.91 5.43847 4.5]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [30.2417 16.0451 -17.5638]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 17.7577
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.750781
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.0640299 0.923183 0.37899]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[20]: visible = 1
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // output[3]: visible = 0
    // page group: PlotAll
    // depth: value = 16
    // window: position = (0.2414,0.4092), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3[cache: 0] = 
    Image(
    main_Image_2_in_1,
    main_Collect_2_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Switch_6_out_1,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node Route[2]: x = 561, y = 422, inputs = 2, outputs = 2, label = Route
    // page group: PlotAll
    //
main_Route_2_out_1,
main_Route_2_out_2[cache: 0] = 
    Route(
    main_Toggle_5_out_1,
    main_Image_2_out_2
    ) [instance: 2, cache: 1];
    // 
    // node Export[1]: x = 680, y = 490, inputs = 3, label = Export
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "dx text follows"
    // page group: PlotAll
    //
    Export(
    main_Route_2_out_1,
    main_FileSelector_3_out_1,
    main_Export_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node FileSelector[2]: x = 359, y = 506, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home3/marco/Adyn/ph_13c"
    // output[2]: visible = 1, type = 32, value = "ph_13c"
    // page group: PlotAll
    //
    // 
    // node Transmitter[28]: x = 617, y = 435, inputs = 1, label = ImageNumber
    // page group: MainControl
    //
ImageNumber = main_Sequencer_1_out_1;
    // 
    // node Receiver[32]: x = 516, y = 510, inputs = 1, label = ImageNumber
    // page group: PlotAll
    //
main_Receiver_32_out_1[cache: 0] = ImageNumber;
    // 
    // node Format[1]: x = 442, y = 602, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s_%3.3d"
    // page group: PlotAll
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_FileSelector_2_out_1,
    main_Receiver_32_out_1
    ) [instance: 1, cache: 1];
    // 
    // node ManageSequencer[1]: x = 303, y = 670, inputs = 1, label = ManageSequencer
    // page group: MainControl
    //
    ManageSequencer(
    main_Compute_6_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[4]: x = 72, y = 435, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: PlotAll
    // toggle : 0
    //
    // 
    // node Route[1]: x = 167, y = 514, inputs = 2, outputs = 2, label = Route
    // page group: PlotAll
    //
main_Route_1_out_1,
main_Route_1_out_2[cache: 0] = 
    Route(
    main_Toggle_4_out_1,
    main_Image_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Render[1]: x = 258, y = 586, inputs = 3, label = Render
    // page group: PlotAll
    //
main_Render_1_out_1 = 
    Render(
    main_Route_1_out_1,
    main_Image_2_out_2,
    main_Render_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[24]: x = 482, y = 359, inputs = 1, label = Simulation_times
    // page group: MainControl
    //
Simulation_times = main_Inquire_5_out_1;
    // 
    // node Transmitter[26]: x = 259, y = 473, inputs = 1, label = Time
    // page group: MainControl
    //
Time = main_Selector_12_out_1;
    // 
    // node WriteImage[1]: x = 340, y = 686, inputs = 4, label = WriteImage
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "tiff"
    // page group: PlotAll
    //
    WriteImage(
    main_Render_1_out_1,
    main_Format_1_out_1,
    main_WriteImage_1_in_3,
    main_WriteImage_1_in_4
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_FileSelector_1_out_1 = "/home3/marco/Adyn/ph_13c.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Selector_16_in_1 = "Selector_16";
main_Selector_16_in_2 = "Show step" ;
main_Selector_16_in_3 = 1 ;
main_Selector_16_in_4 = NULL;
main_Selector_16_in_5 = NULL;
main_Selector_16_in_6 = NULL;
main_Selector_16_in_7 = NULL;
main_Selector_16_out_1 = 1 ;
main_Inquire_5_in_2 = "series positions";
main_Inquire_5_in_3 = NULL;
main_Inquire_5_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 21 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 21 ;
main_Inquire_9_in_2 = "items";
main_Inquire_9_in_3 = NULL;
main_Inquire_9_out_1 = NULL;
main_Compute_16_in_1 = "max(1,$1/$0)";
main_Compute_16_out_1 = NULL;
main_DecimateFormatList_1_in_2 = "%f";
main_DecimateFormatList_1_out_1 = NULL;
main_Selector_12_in_1 = "Selector_12";
main_Selector_12_in_2 = "0.000000" ;
main_Selector_12_in_3 = 0 ;
main_Selector_12_in_5 = NULL;
main_Selector_12_in_6 = NULL;
main_Selector_12_in_7 = NULL;
main_Selector_12_out_1 = 0 ;
main_Compute_5_in_1 = "0";
main_Compute_5_in_2 = NULL;
main_Compute_5_in_3 = NULL;
main_Compute_5_out_1 = NULL;
main_Inquire_7_in_2 = "count";
main_Inquire_7_in_3 = NULL;
main_Inquire_7_out_1 = NULL;
main_Compute_4_in_1 = "$0-1";
main_Compute_4_in_3 = NULL;
main_Compute_4_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 200 1 0 200 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 200;
@deltaframe = 1;
main_Switch_2_out_1 = NULL;
main_Select_10_in_3 = NULL;
main_Select_10_out_1 = NULL;
main_Transmitter_32_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Mark_14_in_2 = "positions";
main_Mark_14_out_1 = NULL;
main_Select_13_in_2 = NULL;
main_Select_13_in_3 = NULL;
main_Select_13_out_1 = NULL;
main_Transmitter_31_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Mark_13_in_2 = "positions";
main_Mark_13_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 1.0 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 1.0 ;
main_Compute_17_in_1 = "$1+(($0-$1)*$2)";
main_Compute_17_out_1 = NULL;
main_Unmark_2_in_2 = NULL;
main_Unmark_2_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Select_11_in_2 = "OrientedTriads";
main_Select_11_in_3 = NULL;
main_Select_11_out_1 = NULL;
main_Mark_5_in_2 = "labels";
main_Mark_5_out_1 = NULL;
main_AutoGlyph_4_in_2 = "text";
main_AutoGlyph_4_in_3 = NULL;
main_AutoGlyph_4_in_4 = NULL;
main_AutoGlyph_4_in_5 = NULL;
main_AutoGlyph_4_in_6 = NULL;
main_AutoGlyph_4_in_7 = NULL;
main_AutoGlyph_4_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "x" ;
main_Selector_1_in_3 = 0 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 0 ;
main_Format_2_in_1 = "a.%d";
main_Format_2_in_3 = NULL;
main_Format_2_out_1 = NULL;
main_Mark_6_in_2 = "positions";
main_Mark_6_out_1 = NULL;
main_Compute2_1_in_2 = "a";
main_Compute2_1_in_4 = NULL;
main_Compute2_1_in_5 = NULL;
main_Compute2_1_out_1 = NULL;
main_AutoGlyph_6_in_2 = "text";
main_AutoGlyph_6_in_3 = NULL;
main_AutoGlyph_6_in_4 = NULL;
main_AutoGlyph_6_in_5 = NULL;
main_AutoGlyph_6_in_6 = NULL;
main_AutoGlyph_6_in_7 = NULL;
main_AutoGlyph_6_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Select_12_in_2 = "Beams2";
main_Select_12_in_3 = NULL;
main_Select_12_out_1 = NULL;
main_Isolate_1_in_2 = 1.;
main_Isolate_1_out_1 = NULL;
main_Mark_7_in_2 = "positions";
main_Mark_7_out_1 = NULL;
main_Mark_9_in_2 = "cosines";
main_Mark_9_out_1 = NULL;
main_Mark_8_in_2 = "connections";
main_Mark_8_out_1 = NULL;
main_Compute_10_in_1 = "$0.1";
main_Compute_10_in_3 = NULL;
main_Compute_10_out_1 = NULL;
main_Extract_2_in_2 = NULL;
main_Extract_2_out_1 = NULL;
main_Options_2_in_2 = "dep";
main_Options_2_in_3 = NULL;
main_Options_2_in_4 = NULL;
main_Options_2_in_5 = NULL;
main_Options_2_out_1 = NULL;
main_Mark_11_in_2 = "offsets";
main_Mark_11_out_1 = NULL;
main_Compute_7_in_1 = "[$0.0, $0.1, $0.2]";
main_Compute_7_in_3 = NULL;
main_Compute_7_out_1 = NULL;
main_Post_1_in_2 = NULL;
main_Post_1_out_1 = NULL;
main_Replace_1_in_3 = NULL;
main_Replace_1_in_4 = "invalid positions";
main_Replace_1_out_1 = NULL;
main_M3TimesP3_2_out_1 = NULL;
main_Compute_11_in_1 = "invalid($0)?[0.,0.,0.]:$0";
main_Compute_11_in_3 = NULL;
main_Compute_11_out_1 = NULL;
main_Remove_2_in_2 = "invalid positions";
main_Remove_2_out_1 = NULL;
main_Compute_9_in_1 = "$0.0";
main_Compute_9_in_3 = NULL;
main_Compute_9_out_1 = NULL;
main_Extract_1_in_2 = NULL;
main_Extract_1_out_1 = NULL;
main_Options_1_in_2 = "dep";
main_Options_1_in_3 = NULL;
main_Options_1_in_4 = NULL;
main_Options_1_in_5 = NULL;
main_Options_1_out_1 = NULL;
main_Compute_8_in_1 = "[$0.3, $0.4, $0.5]";
main_Compute_8_in_3 = NULL;
main_Compute_8_out_1 = NULL;
main_Post_2_in_2 = NULL;
main_Post_2_out_1 = NULL;
main_Replace_2_in_3 = "data";
main_Replace_2_in_4 = "invalid positions";
main_Replace_2_out_1 = NULL;
main_M3TimesP3_1_out_1 = NULL;
main_Compute_12_in_1 = "invalid($0)?[0.,0.,0.]:$0";
main_Compute_12_in_3 = NULL;
main_Compute_12_out_1 = NULL;
main_Remove_1_in_2 = "invalid positions";
main_Remove_1_out_1 = NULL;
main_Compute_14_in_1 = "$0+$1";
main_Compute_14_out_1 = NULL;
main_Compute_13_in_1 = "$0+$1";
main_Compute_13_out_1 = NULL;
main_Unmark_1_in_2 = NULL;
main_Unmark_1_out_1 = NULL;
main_Mark_12_in_2 = "labels";
main_Mark_12_out_1 = NULL;
main_AutoGlyph_10_in_2 = "text";
main_AutoGlyph_10_in_3 = NULL;
main_AutoGlyph_10_in_4 = NULL;
main_AutoGlyph_10_in_5 = NULL;
main_AutoGlyph_10_in_6 = NULL;
main_AutoGlyph_10_in_7 = NULL;
main_AutoGlyph_10_out_1 = NULL;
main_Mark_3_in_2 = "cosines";
main_Mark_3_out_1 = NULL;
main_Compute_1_in_1 = "[$0.0, $0.1, $0.2]";
main_Compute_1_in_3 = NULL;
main_Compute_1_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 0.55 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 0.55 ;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Glyph_1_in_2 = NULL;
main_Glyph_1_in_3 = NULL;
main_Glyph_1_in_5 = NULL;
main_Glyph_1_in_6 = NULL;
main_Glyph_1_in_7 = NULL;
main_Glyph_1_out_1 = NULL;
main_Color_1_in_2 = "red";
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Compute_2_in_1 = "[$0.3, $0.4, $0.5]";
main_Compute_2_in_3 = NULL;
main_Compute_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Glyph_2_in_2 = NULL;
main_Glyph_2_in_3 = NULL;
main_Glyph_2_in_5 = NULL;
main_Glyph_2_in_6 = NULL;
main_Glyph_2_in_7 = NULL;
main_Glyph_2_out_1 = NULL;
main_Color_2_in_2 = "green";
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Compute_3_in_1 = "[$0.6, $0.7, $0.8]";
main_Compute_3_in_3 = NULL;
main_Compute_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Glyph_3_in_2 = NULL;
main_Glyph_3_in_3 = NULL;
main_Glyph_3_in_5 = NULL;
main_Glyph_3_in_6 = NULL;
main_Glyph_3_in_7 = NULL;
main_Glyph_3_out_1 = NULL;
main_Color_3_in_2 = "blue";
main_Color_3_in_3 = NULL;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Legend_1_in_1 = {"z","y","x"};
main_Legend_1_in_2 = {"blue","green","red"};
main_Legend_1_in_3 = [1 1];
main_Legend_1_in_4 = [200 25];
main_Legend_1_in_5 = NULL;
main_Legend_1_in_6 = NULL;
main_Legend_1_in_7 = NULL;
main_Legend_1_in_8 = NULL;
main_Legend_1_in_9 = 1.0;
main_Legend_1_in_10 = NULL;
main_Legend_1_out_1 = NULL;
main_Selector_2_in_1 = "Selector_2";
main_Selector_2_in_2 = "No Data" ;
main_Selector_2_in_3 = 0 ;
main_Selector_2_in_4 = NULL;
main_Selector_2_in_5 = NULL;
main_Selector_2_in_6 = NULL;
main_Selector_2_in_7 = NULL;
main_Selector_2_out_1 = 0 ;
main_Switch_1_in_4 = NULL;
main_Switch_1_in_5 = NULL;
main_Switch_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Toggle_2_in_1 = "Toggle_2";
main_Toggle_2_in_2 = 1;
main_Toggle_2_in_3 = 1;
main_Toggle_2_in_4 = NULL;
main_Toggle_2_in_5 = NULL;
main_Toggle_2_in_6 = NULL;
main_Toggle_2_out_1 = 1;
main_Switch_4_in_3 = NULL;
main_Switch_4_out_1 = NULL;
main_Transmitter_29_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Toggle_1_in_1 = "Toggle_1";
main_Toggle_1_in_2 = 1;
main_Toggle_1_in_3 = 1;
main_Toggle_1_in_4 = NULL;
main_Toggle_1_in_5 = NULL;
main_Toggle_1_in_6 = NULL;
main_Toggle_1_out_1 = 1;
main_Inquire_8_in_2 = "has member";
main_Inquire_8_in_3 = "Beams2";
main_Inquire_8_out_1 = NULL;
main_Compute_15_in_1 = "$0 && $1";
main_Compute_15_out_1 = NULL;
main_Toggle_3_in_1 = "Toggle_3";
main_Toggle_3_in_2 = 0;
main_Toggle_3_in_3 = 0;
main_Toggle_3_in_4 = NULL;
main_Toggle_3_in_5 = NULL;
main_Toggle_3_in_6 = NULL;
main_Toggle_3_out_1 = 0;
main_Switch_5_in_3 = NULL;
main_Switch_5_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Tube_1_in_2 = NULL;
main_Tube_1_in_3 = 4;
main_Tube_1_in_4 = NULL;
main_Tube_1_out_1 = NULL;
main_Collect_4_out_1 = NULL;
main_Switch_3_in_3 = NULL;
main_Switch_3_out_1 = NULL;
main_Transmitter_30_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Compute_6_in_1 = "$0-1";
main_Compute_6_in_3 = NULL;
main_Compute_6_out_1 = NULL;
main_Toggle_5_in_1 = "Toggle_5";
main_Toggle_5_in_2 = 0;
main_Toggle_5_in_3 = 0;
main_Toggle_5_in_4 = NULL;
main_Toggle_5_in_5 = NULL;
main_Toggle_5_in_6 = NULL;
main_Toggle_5_out_1 = 0;
main_Toggle_6_in_1 = "Toggle_6";
main_Toggle_6_in_2 = 0;
main_Toggle_6_in_3 = 0;
main_Toggle_6_in_4 = NULL;
main_Toggle_6_in_5 = NULL;
main_Toggle_6_in_6 = NULL;
main_Toggle_6_out_1 = 0;
main_FileSelector_3_out_1 = "/home/marco/view.dx";
main_Route_3_out_1 = NULL;
main_Import_2_in_2 = NULL;
main_Import_2_in_3 = NULL;
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_Switch_6_in_3 = NULL;
main_Switch_6_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X16,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [7.91 5.43847 4.5];
main_Image_2_in_6 = [30.2417 16.0451 -17.5638];
main_Image_2_in_7 = 17.7577;
main_Image_2_in_8 = 640;
main_Image_2_in_9 = 0.750781;
main_Image_2_in_10 = [-0.0640299 0.923183 0.37899];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = 1;
main_Image_2_in_18 = 1;
main_Image_2_in_19 = 1;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = 0;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = 0;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = 0;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "rotate";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Image_2_out_1 = NULL;
main_Image_2_out_2 = NULL;
main_Route_2_out_1 = NULL;
main_Export_1_in_3 = "dx text follows";
main_FileSelector_2_out_1 = "/home3/marco/Adyn/ph_13c";
main_Transmitter_28_out_1 = NULL;
main_Receiver_32_out_1 = NULL;
main_Format_1_in_1 = "%s_%3.3d";
main_Format_1_out_1 = NULL;
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 = 0;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 = NULL;
main_Toggle_4_in_5 = NULL;
main_Toggle_4_in_6 = NULL;
main_Toggle_4_out_1 = 0;
main_Route_1_out_1 = NULL;
main_Render_1_in_3 = NULL;
main_Render_1_out_1 = NULL;
main_WriteImage_1_in_3 = "tiff";
main_WriteImage_1_in_4 = NULL;
Executive("product version 4 1 3");
$sync

sequence main();
play;
