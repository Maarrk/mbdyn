//
// time: Wed Jan 15 11:06:45 2003
//
// version: 3.1.2 (format), 4.1.3 (DX)
//
//
//
// macro reference (direct): RotTensor /home2/marco/mbdyn/contrib/OpenDX-post/RotTensor.net
include "RotTensor.net"
//
// macro reference (indirect): M3FromRowVectors /home2/marco/mbdyn/contrib/OpenDX-post/M3FromRowVectors.net
//
// macro reference (direct): M3Mul /home2/marco/mbdyn/contrib/OpenDX-post/M3Mul.net
include "M3Mul.net"
//
// MODULE main
//
// comment: macro reference (direct): FormatList /opt/dx/samples/macros/FormatListMacro.net
// comment: macro reference (direct): M3TimesP3 @PREFIX@/contrib/OpenDX-post/M3TimesP3.net
// comment: macro reference (direct): M3TimesP3 /data1/home/marc2/OpenDX-post/M3TimesP3.net
// comment: Copyright (C) 2003
// comment: 
// comment: Marco Morandini <morandini@aero.polimi.it>
// comment: 
// comment: This program is freely usable as a post-processor
// comment: for the GPL'ed multi-body code MBDyn (available
// comment: at http://www.mbdyn.org).
// comment: The program can be distributed with the source code
// comment: of MBDyn.  Any other use of the program, including
// comment: its modification, is explicitly forbidden
// comment: 
// comment: This program is distributed in the hope 
// comment: that it will be useful,
// comment: but WITHOUT ANY WARRANTY; 
// comment: without even the implied warranty of
// comment: MERCHANTABILITY or FITNESS FOR 
// comment: A PARTICULAR PURPOSE.
// page assignment: MainControl	order=2, windowed=0, showing=1
// page assignment: PlotAll	order=6, windowed=0, showing=0
// page assignment: ScaleDispl	order=3, windowed=0, showing=0
// page assignment: ShowBeams2	order=5, windowed=0, showing=0
// page assignment: ShowTriads	order=4, windowed=0, showing=0
// workspace: width = 882, height = 737
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node FileSelector[1]: x = 187, y = 10, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home2/marco/mbdyn/contrib/OpenDX-post/mode-rf-13-c-4.dx"
    // output[2]: visible = 1, type = 32, value = "mode-rf-13-c-4.dx"
    // page group: MainControl
    //
    // 
    // node Import[1]: x = 197, y = 114, inputs = 6, label = Import
    // page group: MainControl
    //
main_Import_1_out_1 = 
    Import(
    main_FileSelector_1_out_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Mark[19]: x = 31, y = 210, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "orientations"
    // page group: MainControl
    //
main_Mark_19_out_1 = 
    Mark(
    main_Import_1_out_1,
    main_Mark_19_in_2
    ) [instance: 19, cache: 1];
    // 
    // node Compute[28]: x = 96, y = 217, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*1"
    // page group: MainControl
    // expression: value = a*1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_28_out_1 = 
    Compute(
    main_Compute_28_in_1,
    main_Mark_19_out_1,
    main_Compute_28_in_3
    ) [instance: 28, cache: 1];
    // 
    // node RotTensor[1]: x = 172, y = 217, inputs = 1, label = RotTensor
    // page group: MainControl
    //
main_RotTensor_1_out_1 = 
    RotTensor(
    main_Compute_28_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Unmark[5]: x = 260, y = 221, inputs = 2, label = Unmark
    // page group: MainControl
    //
main_Unmark_5_out_1 = 
    Unmark(
    main_RotTensor_1_out_1,
    main_Unmark_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node Rename[3]: x = 329, y = 220, inputs = 3, label = Rename
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "orientations"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "cosines"
    // page group: MainControl
    //
main_Rename_3_out_1 = 
    Rename(
    main_Unmark_5_out_1,
    main_Rename_3_in_2,
    main_Rename_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Mark[15]: x = 173, y = 330, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "realdispl"
    // page group: MainControl
    //
main_Mark_15_out_1 = 
    Mark(
    main_Rename_3_out_1,
    main_Mark_15_in_2
    ) [instance: 15, cache: 1];
    // 
    // node Mark[16]: x = 235, y = 330, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "imagdispl"
    // page group: MainControl
    //
main_Mark_16_out_1 = 
    Mark(
    main_Rename_3_out_1,
    main_Mark_16_in_2
    ) [instance: 16, cache: 1];
    // 
    // node Integer[1]: x = 600, y = 22, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 32 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1000
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 32 
    // page group: MainControl
    //
    // 
    // node Sequencer[1]: x = 519, y = 114, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 32
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 32 1 0 32 1 }
    // page group: MainControl
    // vcr[1]: min = 0, max = 32, beg = 0, end = 32, cur = 0, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.5086,0.0000), size = 0.2734x0.1045
    //
    main_Sequencer_1_in_3 = @frame;
main_Sequencer_1_out_1[cache: 2] = 
    Sequencer(
    main_Sequencer_1_in_1,
    main_Sequencer_1_in_2,
    main_Sequencer_1_in_3,
    main_Sequencer_1_in_4,
    main_Integer_1_out_1,
    main_Sequencer_1_in_6,
    main_Sequencer_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Compute[18]: x = 634, y = 115, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "2*3.1415/($1+1)*($0)"
    // page group: MainControl
    // expression: value = 2*3.1415/(b+1)*(a)
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_18_out_1 = 
    Compute(
    main_Compute_18_in_1,
    main_Sequencer_1_out_1,
    main_Integer_1_out_1
    ) [instance: 18, cache: 1];
    // 
    // node Transmitter[24]: x = 677, y = 202, inputs = 1, label = Simulation_times
    // page group: MainControl
    //
Simulation_times = main_Compute_18_out_1;
    // 
    // node Receiver[10]: x = 305, y = 333, inputs = 1, label = Simulation_times
    // page group: MainControl
    //
main_Receiver_10_out_1[cache: 0] = Simulation_times;
    // 
    // node Compute[19]: x = 192, y = 436, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*cos($2)+$1*sin($2)"
    // page group: MainControl
    // expression: value = a*cos(c)+b*sin(c)
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_19_out_1 = 
    Compute(
    main_Compute_19_in_1,
    main_Mark_15_out_1,
    main_Mark_16_out_1,
    main_Receiver_10_out_1
    ) [instance: 19, cache: 1];
    // 
    // node Unmark[3]: x = 196, y = 527, inputs = 2, label = Unmark
    // page group: MainControl
    //
main_Unmark_3_out_1 = 
    Unmark(
    main_Compute_19_out_1,
    main_Unmark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Rename[1]: x = 190, y = 612, inputs = 3, label = Rename
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "realdispl"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "displ"
    // page group: MainControl
    //
main_Rename_1_out_1 = 
    Rename(
    main_Unmark_3_out_1,
    main_Rename_1_in_2,
    main_Rename_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Mark[17]: x = 446, y = 339, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "realrot"
    // page group: MainControl
    //
main_Mark_17_out_1 = 
    Mark(
    main_Rename_1_out_1,
    main_Mark_17_in_2
    ) [instance: 17, cache: 1];
    // 
    // node Mark[18]: x = 506, y = 339, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "imagrot"
    // page group: MainControl
    //
main_Mark_18_out_1 = 
    Mark(
    main_Rename_1_out_1,
    main_Mark_18_in_2
    ) [instance: 18, cache: 1];
    // 
    // node Receiver[11]: x = 563, y = 341, inputs = 1, label = Simulation_times
    // page group: MainControl
    //
main_Receiver_11_out_1[cache: 0] = Simulation_times;
    // 
    // node Compute[21]: x = 494, y = 429, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*cos($2)+$1*sin($2)"
    // page group: MainControl
    // expression: value = a*cos(c)+b*sin(c)
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_21_out_1 = 
    Compute(
    main_Compute_21_in_1,
    main_Mark_17_out_1,
    main_Mark_18_out_1,
    main_Receiver_11_out_1
    ) [instance: 21, cache: 1];
    // 
    // node Unmark[4]: x = 515, y = 506, inputs = 2, label = Unmark
    // input[2]: defaulting = 1, visible = 1, type = 32, value = "realrot"
    // page group: MainControl
    //
main_Unmark_4_out_1 = 
    Unmark(
    main_Compute_21_out_1,
    main_Unmark_4_in_2
    ) [instance: 4, cache: 1];
    // 
    // node Rename[2]: x = 532, y = 579, inputs = 3, label = Rename
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "realrot"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "rotationvector"
    // page group: MainControl
    //
main_Rename_2_out_1 = 
    Rename(
    main_Unmark_4_out_1,
    main_Rename_2_in_2,
    main_Rename_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[32]: x = 505, y = 675, inputs = 1, label = DeformedTimeData
    // page group: MainControl
    //
DeformedTimeData = main_Rename_2_out_1;
    // 
    // node Receiver[8]: x = 74, y = 87, inputs = 1, label = DeformedTimeData
    // page group: ScaleDispl
    //
main_Receiver_8_out_1[cache: 0] = DeformedTimeData;
    // 
    // node Mark[14]: x = 126, y = 219, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "displ"
    // page group: ScaleDispl
    //
main_Mark_14_out_1 = 
    Mark(
    main_Receiver_8_out_1,
    main_Mark_14_in_2
    ) [instance: 14, cache: 1];
    // 
    // node Transmitter[31]: x = 45, y = 326, inputs = 1, label = UndeformedData
    // page group: MainControl
    //
UndeformedData = main_Rename_3_out_1;
    // 
    // node Receiver[9]: x = 241, y = 91, inputs = 1, label = UndeformedData
    // page group: ScaleDispl
    //
main_Receiver_9_out_1[cache: 0] = UndeformedData;
    // 
    // node Mark[13]: x = 263, y = 225, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ScaleDispl
    //
main_Mark_13_out_1 = 
    Mark(
    main_Receiver_9_out_1,
    main_Mark_13_in_2
    ) [instance: 13, cache: 1];
    // 
    // node Scalar[2]: x = 440, y = 24, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 1.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 1.0 
    // page group: MainControl
    //
    // 
    // node Transmitter[33]: x = 426, y = 205, inputs = 1, label = ModeScale
    // page group: MainControl
    //
ModeScale = main_Scalar_2_out_1;
    // 
    // node Receiver[12]: x = 395, y = 92, inputs = 1, label = ModeScale
    // page group: ScaleDispl
    //
main_Receiver_12_out_1[cache: 0] = ModeScale;
    // 
    // node Compute[17]: x = 251, y = 336, inputs = 4, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*$2+$1"
    // page group: ScaleDispl
    // expression: value = a*c+b
    // name[2]: value = a
    // name[3]: value = b
    // name[4]: value = c
    //
main_Compute_17_out_1 = 
    Compute(
    main_Compute_17_in_1,
    main_Mark_14_out_1,
    main_Mark_13_out_1,
    main_Receiver_12_out_1
    ) [instance: 17, cache: 1];
    // 
    // node Unmark[2]: x = 268, y = 447, inputs = 2, label = Unmark
    // page group: ScaleDispl
    //
main_Unmark_2_out_1 = 
    Unmark(
    main_Compute_17_out_1,
    main_Unmark_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Rename[4]: x = 345, y = 449, inputs = 3, label = Rename
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "displ"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: ScaleDispl
    //
main_Rename_4_out_1 = 
    Rename(
    main_Unmark_2_out_1,
    main_Rename_4_in_2,
    main_Rename_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[27]: x = 265, y = 537, inputs = 1, label = TimeData
    // page group: ScaleDispl
    //
TimeData = main_Rename_4_out_1;
    // 
    // node Receiver[4]: x = 264, y = 64, inputs = 1, label = TimeData
    // page group: ShowTriads
    //
main_Receiver_4_out_1[cache: 0] = TimeData;
    // 
    // node Mark[20]: x = 15, y = 176, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rotationvector"
    // page group: ShowTriads
    //
main_Mark_20_out_1 = 
    Mark(
    main_Receiver_4_out_1,
    main_Mark_20_in_2
    ) [instance: 20, cache: 1];
    // 
    // node Receiver[13]: x = 85, y = 99, inputs = 1, label = ModeScale
    // page group: ShowTriads
    //
main_Receiver_13_out_1[cache: 0] = ModeScale;
    // 
    // node Compute[27]: x = 73, y = 182, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*$1*1"
    // page group: ShowTriads
    // expression: value = a*b*1
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_27_out_1 = 
    Compute(
    main_Compute_27_in_1,
    main_Mark_20_out_1,
    main_Receiver_13_out_1
    ) [instance: 27, cache: 1];
    // 
    // node RotTensor[2]: x = 160, y = 186, inputs = 1, label = RotTensor
    // page group: ShowTriads
    //
main_RotTensor_2_out_1 = 
    RotTensor(
    main_Compute_27_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Mark[3]: x = 285, y = 180, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "cosines"
    // page group: ShowTriads
    //
main_Mark_3_out_1[cache: 0] = 
    Mark(
    main_Receiver_4_out_1,
    main_Mark_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node M3Mul[1]: x = 238, y = 269, inputs = 2, label = M3Mul
    // page group: ShowTriads
    //
main_M3Mul_1_out_1 = 
    M3Mul(
    main_RotTensor_2_out_1,
    main_Mark_3_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Compute[1]: x = 154, y = 385, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.0, $0.3, $0.6]"
    // page group: ShowTriads
    // expression: value = [a.0, a.3, a.6]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_M3Mul_1_out_1,
    main_Compute_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[1]: x = 418, y = 46, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.25 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.01
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 10.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.25 
    // page group: ShowTriads
    //
    // 
    // node Transmitter[1]: x = 481, y = 143, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
TriadScale = main_Scalar_1_out_1;
    // 
    // node Receiver[1]: x = 263, y = 364, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
main_Receiver_1_out_1[cache: 0] = TriadScale;
    // 
    // node Glyph[1]: x = 176, y = 490, inputs = 7, label = Glyph
    // page group: ShowTriads
    //
main_Glyph_1_out_1[cache: 0] = 
    Glyph(
    main_Compute_1_out_1,
    main_Glyph_1_in_2,
    main_Glyph_1_in_3,
    main_Receiver_1_out_1,
    main_Glyph_1_in_5,
    main_Glyph_1_in_6,
    main_Glyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 166, y = 584, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "red"
    // page group: ShowTriads
    //
main_Color_1_out_1 = 
    Color(
    main_Glyph_1_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Compute[2]: x = 357, y = 417, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.1, $0.4, $0.7]"
    // page group: ShowTriads
    // expression: value = [a.1, a.4, a.7]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_M3Mul_1_out_1,
    main_Compute_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[2]: x = 428, y = 388, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
main_Receiver_2_out_1[cache: 0] = TriadScale;
    // 
    // node Glyph[2]: x = 344, y = 494, inputs = 7, label = Glyph
    // page group: ShowTriads
    //
main_Glyph_2_out_1[cache: 0] = 
    Glyph(
    main_Compute_2_out_1,
    main_Glyph_2_in_2,
    main_Glyph_2_in_3,
    main_Receiver_2_out_1,
    main_Glyph_2_in_5,
    main_Glyph_2_in_6,
    main_Glyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Color[2]: x = 345, y = 585, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "green"
    // page group: ShowTriads
    //
main_Color_2_out_1 = 
    Color(
    main_Glyph_2_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Compute[3]: x = 576, y = 424, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "[$0.2, $0.5, $0.8]"
    // page group: ShowTriads
    // expression: value = [a.2, a.5, a.8]
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_M3Mul_1_out_1,
    main_Compute_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[3]: x = 669, y = 333, inputs = 1, label = TriadScale
    // page group: ShowTriads
    //
main_Receiver_3_out_1[cache: 0] = TriadScale;
    // 
    // node Glyph[3]: x = 557, y = 498, inputs = 7, label = Glyph
    // page group: ShowTriads
    //
main_Glyph_3_out_1[cache: 0] = 
    Glyph(
    main_Compute_3_out_1,
    main_Glyph_3_in_2,
    main_Glyph_3_in_3,
    main_Receiver_3_out_1,
    main_Glyph_3_in_5,
    main_Glyph_3_in_6,
    main_Glyph_3_in_7
    ) [instance: 3, cache: 1];
    // 
    // node Color[3]: x = 557, y = 581, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "blue"
    // page group: ShowTriads
    //
main_Color_3_out_1 = 
    Color(
    main_Glyph_3_out_1,
    main_Color_3_in_2,
    main_Color_3_in_3,
    main_Color_3_in_4,
    main_Color_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Legend[1]: x = 647, y = 634, inputs = 10, label = Legend
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"z","y","x"}
    // input[2]: defaulting = 0, visible = 1, type = 16777248, value = {"blue","green","red"}
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [1 1]
    // input[4]: defaulting = 0, visible = 1, type = 8, value = [200 25]
    // input[5]: defaulting = 1, visible = 1, type = 3, value = 0
    // input[8]: defaulting = 1, visible = 0, type = 16777248, value = {"ticks"}
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // page group: ShowTriads
    //
main_Legend_1_out_1 = 
    Legend(
    main_Legend_1_in_1,
    main_Legend_1_in_2,
    main_Legend_1_in_3,
    main_Legend_1_in_4,
    main_Legend_1_in_5,
    main_Legend_1_in_6,
    main_Legend_1_in_7,
    main_Legend_1_in_8,
    main_Legend_1_in_9,
    main_Legend_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 294, y = 744, inputs = 5, label = Collect
    // page group: ShowTriads
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Color_2_out_1,
    main_Color_3_out_1,
    main_Legend_1_out_1,
    main_Collect_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Toggle[2]: x = 126, y = 706, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_2"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: ShowTriads
    // toggle : 1
    //
    // 
    // node Switch[4]: x = 177, y = 787, inputs = 3, label = Switch
    // page group: ShowTriads
    //
main_Switch_4_out_1 = 
    Switch(
    main_Toggle_2_out_1,
    main_Collect_1_out_1,
    main_Switch_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[29]: x = 311, y = 821, inputs = 1, label = TriadsImage
    // page group: ShowTriads
    //
TriadsImage = main_Switch_4_out_1;
    // 
    // node Receiver[5]: x = 269, y = 63, inputs = 1, label = TriadsImage
    // page group: PlotAll
    //
main_Receiver_5_out_1[cache: 0] = TriadsImage;
    // 
    // node Receiver[6]: x = 220, y = 67, inputs = 1, label = TimeData
    // page group: ShowBeams2
    //
main_Receiver_6_out_1[cache: 0] = TimeData;
    // 
    // node ShowConnections[1]: x = 187, y = 184, inputs = 1, label = ShowConnections
    // page group: ShowBeams2
    //
main_ShowConnections_1_out_1[cache: 0] = 
    ShowConnections(
    main_Receiver_6_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[3]: x = 405, y = 188, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_3"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.05 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 0.05 
    // page group: ShowBeams2
    //
    // 
    // node Tube[1]: x = 241, y = 293, inputs = 4, label = Tube
    // input[2]: defaulting = 1, visible = 1, type = 5, value = 2.0
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 4
    // input[4]: defaulting = 1, visible = 0, type = 32, value = NULL
    // page group: ShowBeams2
    //
main_Tube_1_out_1 = 
    Tube(
    main_ShowConnections_1_out_1,
    main_Scalar_3_out_1,
    main_Tube_1_in_3,
    main_Tube_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[30]: x = 220, y = 389, inputs = 1, label = Beam2Image
    // page group: ShowBeams2
    //
Beam2Image = main_Tube_1_out_1;
    // 
    // node Receiver[7]: x = 396, y = 64, inputs = 1, label = Beam2Image
    // page group: PlotAll
    //
main_Receiver_7_out_1[cache: 0] = Beam2Image;
    // 
    // node Collect[2]: x = 299, y = 197, inputs = 2, label = Collect
    // page group: PlotAll
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_5_out_1,
    main_Receiver_7_out_1
    ) [instance: 2, cache: 1];
    // 
    // node FileSelector[2]: x = 450, y = 463, inputs = 0, label = FileSelector
    // output[1]: visible = 1, type = 32, value = "/home2/marco/mbdyn/contrib/OpenDX-post/mode-rf-13-c-4"
    // output[2]: visible = 1, type = 32, value = "mode-rf-13-c-4"
    // page group: PlotAll
    //
    // 
    // node Transmitter[28]: x = 540, y = 202, inputs = 1, label = ImageNumber
    // page group: MainControl
    //
ImageNumber = main_Sequencer_1_out_1;
    // 
    // node Receiver[32]: x = 611, y = 462, inputs = 1, label = ImageNumber
    // page group: PlotAll
    //
main_Receiver_32_out_1[cache: 0] = ImageNumber;
    // 
    // node Format[1]: x = 535, y = 556, inputs = 3, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s_%3.3d"
    // page group: PlotAll
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_FileSelector_2_out_1,
    main_Receiver_32_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[2]: x = 290, y = 356, inputs = 49, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [2.04658 -0.214041 0.0342228]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [10.3694 3.32113 3.23012]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 5.13972
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.750781
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.260908 -0.232724 0.936892]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0006
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[33]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[36]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: PlotAll
    // depth: value = 16
    // window: position = (0.2414,0.4092), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_2_out_1[cache: 0],
main_Image_2_out_2[cache: 0],
main_Image_2_out_3[cache: 0] = 
    Image(
    main_Image_2_in_1,
    main_Collect_2_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48,
    main_Image_2_in_49
    ) [instance: 2, cache: 1];
    // 
    // node ManageSequencer[1]: x = 746, y = 24, inputs = 1, label = ManageSequencer
    // input[1]: defaulting = 0, visible = 1, type = 3, value = 1
    // page group: MainControl
    //
    ManageSequencer(
    main_ManageSequencer_1_in_1
    ) [instance: 1, cache: 1];
    // 
    // node Remove[3]: x = 534, y = 601, inputs = 2, label = Remove
    // page group: ScaleDispl
    //
main_Remove_3_out_1 = 
    Remove(
    main_Remove_3_in_1,
    main_Remove_3_in_2
    ) [instance: 3, cache: 1];
    // 
    // node Toggle[4]: x = 223, y = 490, inputs = 6, label = Toggle
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Toggle_4"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 0
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[4]: defaulting = 1, visible = 1, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 1, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 0
    // page group: PlotAll
    // toggle : 0
    //
    // 
    // node Route[1]: x = 274, y = 561, inputs = 2, outputs = 2, label = Route
    // page group: PlotAll
    //
main_Route_1_out_1,
main_Route_1_out_2 = 
    Route(
    main_Toggle_4_out_1,
    main_Image_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Render[1]: x = 350, y = 563, inputs = 3, label = Render
    // page group: PlotAll
    //
main_Render_1_out_1 = 
    Render(
    main_Route_1_out_1,
    main_Image_2_out_2,
    main_Render_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Replace[3]: x = 464, y = 469, inputs = 4, label = Replace
    // page group: ScaleDispl
    //
main_Replace_3_out_1 = 
    Replace(
    main_Replace_3_in_1,
    main_Replace_3_in_2,
    main_Replace_3_in_3,
    main_Replace_3_in_4
    ) [instance: 3, cache: 1];
    // 
    // node WriteImage[1]: x = 432, y = 663, inputs = 4, label = WriteImage
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "tiff"
    // page group: PlotAll
    //
    WriteImage(
    main_Render_1_out_1,
    main_Format_1_out_1,
    main_WriteImage_1_in_3,
    main_WriteImage_1_in_4
    ) [instance: 1, cache: 1];
// network: end of macro body
CacheScene(main_Image_2_in_1, main_Image_2_out_1, main_Image_2_out_2);
}
main_FileSelector_1_out_1 = "/home2/marco/mbdyn/contrib/OpenDX-post/mode-rf-13-c-4.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Mark_19_in_2 = "orientations";
main_Mark_19_out_1 = NULL;
main_Compute_28_in_1 = "$0*1";
main_Compute_28_in_3 = NULL;
main_Compute_28_out_1 = NULL;
main_RotTensor_1_out_1 = NULL;
main_Unmark_5_in_2 = NULL;
main_Unmark_5_out_1 = NULL;
main_Rename_3_in_2 = "orientations";
main_Rename_3_in_3 = "cosines";
main_Rename_3_out_1 = NULL;
main_Mark_15_in_2 = "realdispl";
main_Mark_15_out_1 = NULL;
main_Mark_16_in_2 = "imagdispl";
main_Mark_16_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 32 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 32 ;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 32 1 0 32 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 0;
@nextframe  = @startframe;
@endframe   = 32;
@deltaframe = 1;
main_Compute_18_in_1 = "2*3.1415/($1+1)*($0)";
main_Compute_18_out_1 = NULL;
main_Transmitter_24_out_1 = NULL;
main_Receiver_10_out_1 = NULL;
main_Compute_19_in_1 = "$0*cos($2)+$1*sin($2)";
main_Compute_19_out_1 = NULL;
main_Unmark_3_in_2 = NULL;
main_Unmark_3_out_1 = NULL;
main_Rename_1_in_2 = "realdispl";
main_Rename_1_in_3 = "displ";
main_Rename_1_out_1 = NULL;
main_Mark_17_in_2 = "realrot";
main_Mark_17_out_1 = NULL;
main_Mark_18_in_2 = "imagrot";
main_Mark_18_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_Compute_21_in_1 = "$0*cos($2)+$1*sin($2)";
main_Compute_21_out_1 = NULL;
main_Unmark_4_in_2 = NULL;
main_Unmark_4_out_1 = NULL;
main_Rename_2_in_2 = "realrot";
main_Rename_2_in_3 = "rotationvector";
main_Rename_2_out_1 = NULL;
main_Transmitter_32_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Mark_14_in_2 = "displ";
main_Mark_14_out_1 = NULL;
main_Transmitter_31_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Mark_13_in_2 = "positions";
main_Mark_13_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 1.0 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 1.0 ;
main_Transmitter_33_out_1 = NULL;
main_Receiver_12_out_1 = NULL;
main_Compute_17_in_1 = "$0*$2+$1";
main_Compute_17_out_1 = NULL;
main_Unmark_2_in_2 = NULL;
main_Unmark_2_out_1 = NULL;
main_Rename_4_in_2 = "displ";
main_Rename_4_in_3 = "positions";
main_Rename_4_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Mark_20_in_2 = "rotationvector";
main_Mark_20_out_1 = NULL;
main_Receiver_13_out_1 = NULL;
main_Compute_27_in_1 = "$0*$1*1";
main_Compute_27_out_1 = NULL;
main_RotTensor_2_out_1 = NULL;
main_Mark_3_in_2 = "cosines";
main_Mark_3_out_1 = NULL;
main_M3Mul_1_out_1 = NULL;
main_Compute_1_in_1 = "[$0.0, $0.3, $0.6]";
main_Compute_1_in_3 = NULL;
main_Compute_1_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 0.25 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 0.25 ;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Glyph_1_in_2 = NULL;
main_Glyph_1_in_3 = NULL;
main_Glyph_1_in_5 = NULL;
main_Glyph_1_in_6 = NULL;
main_Glyph_1_in_7 = NULL;
main_Glyph_1_out_1 = NULL;
main_Color_1_in_2 = "red";
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Compute_2_in_1 = "[$0.1, $0.4, $0.7]";
main_Compute_2_in_3 = NULL;
main_Compute_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Glyph_2_in_2 = NULL;
main_Glyph_2_in_3 = NULL;
main_Glyph_2_in_5 = NULL;
main_Glyph_2_in_6 = NULL;
main_Glyph_2_in_7 = NULL;
main_Glyph_2_out_1 = NULL;
main_Color_2_in_2 = "green";
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Compute_3_in_1 = "[$0.2, $0.5, $0.8]";
main_Compute_3_in_3 = NULL;
main_Compute_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Glyph_3_in_2 = NULL;
main_Glyph_3_in_3 = NULL;
main_Glyph_3_in_5 = NULL;
main_Glyph_3_in_6 = NULL;
main_Glyph_3_in_7 = NULL;
main_Glyph_3_out_1 = NULL;
main_Color_3_in_2 = "blue";
main_Color_3_in_3 = NULL;
main_Color_3_in_4 = NULL;
main_Color_3_in_5 = NULL;
main_Color_3_out_1 = NULL;
main_Legend_1_in_1 = {"z","y","x"};
main_Legend_1_in_2 = {"blue","green","red"};
main_Legend_1_in_3 = [1 1];
main_Legend_1_in_4 = [200 25];
main_Legend_1_in_5 = NULL;
main_Legend_1_in_6 = NULL;
main_Legend_1_in_7 = NULL;
main_Legend_1_in_8 = NULL;
main_Legend_1_in_9 = 1.0;
main_Legend_1_in_10 = NULL;
main_Legend_1_out_1 = NULL;
main_Collect_1_in_5 = NULL;
main_Collect_1_out_1 = NULL;
main_Toggle_2_in_1 = "Toggle_2";
main_Toggle_2_in_2 = 1;
main_Toggle_2_in_3 = 1;
main_Toggle_2_in_4 = NULL;
main_Toggle_2_in_5 = NULL;
main_Toggle_2_in_6 = NULL;
main_Toggle_2_out_1 = 1;
main_Switch_4_in_3 = NULL;
main_Switch_4_out_1 = NULL;
main_Transmitter_29_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Scalar_3_in_1 = "Scalar_3";
main_Scalar_3_in_2 = NULL;
main_Scalar_3_in_3 = 0.05 ;
main_Scalar_3_in_4 = NULL;
main_Scalar_3_in_5 = NULL;
main_Scalar_3_in_6 = NULL;
main_Scalar_3_in_7 = NULL;
main_Scalar_3_in_8 = NULL;
main_Scalar_3_in_9 = NULL;
main_Scalar_3_in_10 = NULL;
main_Scalar_3_in_11 = NULL;
main_Scalar_3_out_1 = 0.05 ;
main_Tube_1_in_3 = 4;
main_Tube_1_in_4 = NULL;
main_Tube_1_out_1 = NULL;
main_Transmitter_30_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_FileSelector_2_out_1 = "/home2/marco/mbdyn/contrib/OpenDX-post/mode-rf-13-c-4";
main_Transmitter_28_out_1 = NULL;
main_Receiver_32_out_1 = NULL;
main_Format_1_in_1 = "%s_%3.3d";
main_Format_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        webOptions) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X16,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [2.04658 -0.214041 0.0342228];
main_Image_2_in_6 = [10.3694 3.32113 3.23012];
main_Image_2_in_7 = 5.13972;
main_Image_2_in_8 = 640;
main_Image_2_in_9 = 0.750781;
main_Image_2_in_10 = [-0.260908 -0.232724 0.936892];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = 1;
main_Image_2_in_18 = 1;
main_Image_2_in_19 = 1;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = 0;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = 0;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = 0;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "none";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
main_Image_2_in_49 = NULL;
main_Image_2_out_1 = NULL;
main_Image_2_out_2 = NULL;
main_ManageSequencer_1_in_1 = 1;
main_Remove_3_in_1 = NULL;
main_Remove_3_in_2 = NULL;
main_Toggle_4_in_1 = "Toggle_4";
main_Toggle_4_in_2 = 0;
main_Toggle_4_in_3 = 0;
main_Toggle_4_in_4 = NULL;
main_Toggle_4_in_5 = NULL;
main_Toggle_4_in_6 = NULL;
main_Toggle_4_out_1 = 0;
main_Route_1_out_1 = NULL;
main_Render_1_in_3 = NULL;
main_Render_1_out_1 = NULL;
main_Replace_3_in_1 = NULL;
main_Replace_3_in_2 = NULL;
main_Replace_3_in_3 = NULL;
main_Replace_3_in_4 = NULL;
main_WriteImage_1_in_3 = "tiff";
main_WriteImage_1_in_4 = NULL;
Executive("product version 4 1 3");
$sync

sequence main();
play;
