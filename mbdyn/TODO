MBDyn (C) is a multibody analysis code.
http://www.mbdyn.org

Copyright (C) 1996-2004

Pierangelo Masarati     <masarati@aero.polimi.it>
Paolo Mantegazza        <mantegazza@aero.polimi.it>



A. Configuration:

	- test for '_' appended to F77 symbols (recent autoconf does that)
	- audit all the suite for not-so-GNU systems
	- add test for pow_dd stuff (might be needed by fortran code)



B. Package:

	- add a comprehensive test suite
	- make compliant to GNU style



C. Libraries:




D. Code:

	Large Projects:
	- implement binary, or hard, restart
	- add MATLAB/Octave and Simulink hooks.
		Large project: turn mbdyn into a module for Simulink.
	- remove node/element type listing from "control data" block;
	  use STL containers to keep track of model components
	- implement a postprocessor with OpenDX (http://www.opendx.org;
		contact point: Marco Morandini <morandini@aero.polimi.it>)

	Medium Projects:
	- recover existing soft restart
	- add MATLAB/Octave and Simulink hooks.
		``matlab'' element that feeds matlab with data structures 
		containing variables and executes matlab code.
	- develop a trim control as an external command that drives
		a simulation.
	- improve friction and add it to all joints
          (try a transition force from stick to slip that is higher)
	- add Arnoldi-like eigenvalue extraction module
	- review output to allow selective ascii/binary output
	- replace MyLList and LLStack with STL containers

	Small Projects:
	- add MATLAB/Octave and Simulink hooks.
		``shell'' element, drive and so that executes unix commands 
		including scripts, significantly matlab scripts.
	- move critical Reynolds numbers from constants to fluid properties
		with pressure/temperature dependencies.
	- improve symbolic constitutive law (based on GiNaC)
	- move exception handling towards <stdexcept>
	- review/improve user-configurable statistics output
	- add Matlab-compatible sparse matrix generation for sparse
	  matrix eigenvalue analysis (eigs)
	- add selected output streamed on sockets for interactive analysis
		by implementing sort of "sensors", possibly based on the
		elements' "private data" (under devel in RTAI)
	- add rot2any/any2rot utilities
	- try to rewrite hydraulic nodes as scalar differential (?)
	- add joints like:
		- 2-node clamp (spherical + prismatic in one joint)
		- universal without displacement constraints
		- inplane and inline with only one node
	- allow to define modules as separate entities which are later
		referred to by labels, like c81 data or hydraulic fluids.
		(this is no longer required, since using ltdl one can set
		the module path and then use the file name as a label;
		the underlying library will open modules exactly once
		despite they're loaded many times)
	- link to Taucs sparse solver: http://www.tau.ac.il/~stoledo/taucs
	- add aircraft instruments as sensors (e.g. writing measures
		to parameter nodes; refer to
		http://www.allstar.fiu.edu/aero/FlightIns.htm ):
		- airspeed indicator		(V-Vinf).Norm()
		- ground speed indicator	((I-e3.Tens(e3))*V).Norm()
		- altimeter			e3.Dot(X)
		- attitude indicator (pitch and bank)	*
		- turn and slip indicator		+
		- vertical speed indicator	e3.Dot(V-Vinf)
		- angle of attack indicator	v=R.Transpose()*(V-Vinf);
						atan2(v(3),v(1))

		*:	pitch=atan2(e1(3),e1(1));
			bank=atan2(e2(3),e2(2));
		+:	turn=Omega(3);
			slip=?
	- allow the FEM data filename as command-line arg in utils/femgen
	- add orthogonality test when reading orientation matrix
	- append constitutive law output, if any, to elements' output
	  (DONE infrastructure, shock absorber and rods)
	- merge tool to generate ADAMS/View .cmd models from raw output




E. Bugs/missing features:

	- check for nested /* */ comments in parsers
	- eliminate nasty dependence from f2c typedefs (doublereal and so)
	- review deformable viscous/viscoelastic hinge according
	  to the elastic one
	- check "universal pin"
	- fix etc/modal.d/MBDyn_NASTRAN_alter_[1-2].nas; allow the use
	  of node sets to reduce the amount of FEM nodes that are passed
	  to the model element (e.g. no nodes without inertia that do not
	  participate in the interface)
	- clarify how to increase the size of models utils/femgen can
	  handle



F. Documentation:

	- document the utilities in a separate man page
	- update and audit the user manual
	- document output
	- document element private data

