mbdyn-testsuite-report-job:
  stage: test
  needs:
    - job: mbdyn-modules-test-job
      artifacts: true
    - job: mbdyn-tests-private-test-job
      artifacts: true
    - job: mbdyn-tests-public-test-job
      artifacts: true
    - job: octave-pkg-test-job
      artifacts: true
  script:
    - status_files=`find "${TESTSUITE_PREFIX_TESTS}" -name '*-test-job.status'`
    - awk 'BEGIN{ passed=0; failed=0; tests=0; } BEGINFILE { ++tests; idx_test = 0; } { printf("%d.%s:%s:%s\n", tests, ++idx_test, FILENAME, $1); if (match($1,/^passed$/)) { ++passed; } else { ++failed; }} END { printf("%d/%d tests passed\n%d/%d tests failed\n", passed, failed + passed, failed, passed + failed); if (tests != 4 || passed < tests || failed > 0) { exit 1; }}' ${status_files}

mbdyn-testsuite-report-job-gcov:
  stage: test
  needs:
    - job: mbdyn-tests-public-test-job-gcov
      artifacts: true
    - job: mbdyn-tests-private-test-job-gcov
      artifacts: true
  script:
    - status_files=`find "${TESTSUITE_PREFIX_TESTS}" -name '*-test-job.status'`
    - awk 'BEGIN{ passed=0; failed=0; tests=0; } BEGINFILE { ++tests; idx_test = 0; } { printf("%d.%s:%s:%s\n", tests, ++idx_test, FILENAME, $1); if (match($1,/^passed$/)) { ++passed; } else { ++failed; }} END { printf("%d/%d tests passed\n%d/%d tests failed\n", passed, failed + passed, failed, passed + failed); if (tests != 2 || passed < tests || failed > 0) { exit 1; }}' ${status_files}

mbdyn-testsuite-report-job-coverage:
  variables:
    MBD_TEST_COVERAGE_XML: "mbdyn-test-coverage.xml"
    MBD_TEST_COVERAGE_HTML: "mbdyn-test-coverage.html"
  stage: test
  needs:
    - job: netcdf-c-build-job
      artifacts: true
    - job: netcdf-cxx4-build-job
      artifacts: true
    - job: mkl-build-job
      artifacts: true
    - job: mbdyn-tests-private-test-job-gcov ## Fetch all *.gcda and *.gcno
      artifacts: true
    - job: mbdyn-build-job-gcov
      artifacts: true
  script:
    - MBD_TEST_COVERAGE_DIR="${CI_PROJECT_DIR}/${MBD_TEST_COVERAGE_DIR}"
    - MBD_BUILD_DIR_GCOV="${CI_PROJECT_DIR}/${MBD_BUILD_DIR_GCOV}"
    - mkdir -p "${MBD_TEST_COVERAGE_DIR}"
    - xml_file="${MBD_TEST_COVERAGE_DIR}/${MBD_TEST_COVERAGE_XML}"
    - html_file="${MBD_TEST_COVERAGE_DIR}/${MBD_TEST_COVERAGE_HTML}"
    - gcovr --gcov-exclude '.*conftest\.gcda' --gcov-exclude '.*conftest\.gcno' --gcov-ignore-parse-errors --gcov-ignore-errors=no_working_dir_found --html-details --exclude-unreachable-branches --print-summary --root "${CI_PROJECT_DIR}" --object-directory "${MBD_BUILD_DIR_GCOV}" --output "${html_file}"
    - gcovr --gcov-exclude '.*conftest\.gcda' --gcov-exclude '.*conftest\.gcno' --gcov-ignore-parse-errors --gcov-ignore-errors=no_working_dir_found --xml-pretty --exclude-unreachable-branches --print-summary --root "${CI_PROJECT_DIR}" --object-directory "${MBD_BUILD_DIR_GCOV}" --output "${xml_file}"
    - export PATH="${CI_PROJECT_DIR}/testsuite:${PATH}"
    ## Workaround for https://gitlab.com/gitlab-org/gitlab/-/issues/328772. Pipeline artifacts are limited to
    # 10M. So split the single cobertura xml (which is often >100M) into one file per package, since there
    # seems to be no limit on the _number_ of files, jut their size.
    - cobertura_xml_split_by_package.py "${xml_file}" "${MBD_TEST_COVERAGE_DIR}"
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 24h
    paths:
      - $MBD_TEST_COVERAGE_DIR/cobertura-*.xml
      - $MBD_TEST_COVERAGE_DIR/*.html
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $MBD_TEST_COVERAGE_DIR/cobertura-*.xml
